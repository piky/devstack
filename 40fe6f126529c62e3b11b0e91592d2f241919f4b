{
  "comments": [
    {
      "key": {
        "uuid": "bf51134e_a40e3d38",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "I don\u0027t understand this, is it an old comment which is no longer relevant?\n\nOr does this refer to L130 ff.?",
      "range": {
        "startLine": 20,
        "startChar": 27,
        "endLine": 21,
        "endChar": 13
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_6653856c",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "I don\u0027t get it either hehe I just copied this whole module as-is from the neutron repository to devstack without any changes.\n\nI can remove this tho",
      "parentUuid": "bf51134e_a40e3d38",
      "range": {
        "startLine": 20,
        "startChar": 27,
        "endLine": 21,
        "endChar": 13
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_b7b2ed47",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "Isn\u0027t $SERVICE_LOCAL_HOST only ever an IPv6 address if \"$SERVICE_IP_VERSION\" \u003d\u003d 6? That would make this redundant and you could simply use\n\nOVSDB_SERVER_LOCAL_HOST\u003d$SERVICE_LOCAL_HOST",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 98,
        "endChar": 2
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_18b5c132",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T13:57:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf51134e_b7b2ed47",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 98,
        "endChar": 2
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_17d3d961",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 155,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "-z \"$is_new_ovn\"",
      "range": {
        "startLine": 155,
        "startChar": 7,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_06c8c91f",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 155,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf51134e_17d3d961",
      "range": {
        "startLine": 155,
        "startChar": 7,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_170639cf",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "I don\u0027t understand why this is needed as opposed to plainly calling git_clone(). Describing this in a comment might be helpful.",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_a68c7dd7",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "True, perhaps it\u0027s redundant I\u0027ll try to investigate replacing it with the normal git_clone one",
      "parentUuid": "bf51134e_170639cf",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_072ba494",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T10:36:15Z",
      "side": 1,
      "message": "So apparently we have this method to avoid the ERROR_ON_CLONE from git_clone [0], I see other modules are working it around in different ways as well, for example the ovs modules does [1].\n\nI am not sure we want to add OVN/OVS to the required_projects in the job definition. Do you have any recommendation ?\n\nI can also write a comment about it here or try to use the git_clone() method setting ERROR_ON_CLONE to false for cling OVN/OVS.\n\n[0]\n\n2020-07-10 10:03:06.586245 | controller | ++ functions-common:git_clone:561           :   echo \u0027The /opt/stack/ovn project was not found; if this is a gate job, add\u0027\n2020-07-10 10:03:06.586258 | controller | The /opt/stack/ovn project was not found; if this is a gate job, add\n2020-07-10 10:03:06.587618 | controller | ++ functions-common:git_clone:562           :   echo \u0027the project to the $PROJECTS variable in the job definition.\u0027\n2020-07-10 10:03:06.587644 | controller | the project to the $PROJECTS variable in the job definition.\n2020-07-10 10:03:06.590112 | controller | ++ functions-common:git_clone:563           :   die 563 \u0027Cloning not allowed in this configuration\u0027\n2020-07-10 10:03:06.592052 | controller | ++ functions-common:die:198                 :   local exitcode\u003d0\n\n[1] https://github.com/openstack/neutron/blob/5999716cfc4a00ac426e016eabbb51247ba0b190/devstack/lib/ovs#L45-L55",
      "parentUuid": "bf51134e_a68c7dd7",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_ea6637bb",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T11:04:59Z",
      "side": 1,
      "message": "IIRC there were plans to use distro pkgs instead of building from source, at least on Focal, would that solve this issue?\nOtherwise I think we should indeed look into making those repos available pre-cloned in our images, as cloning from github has proved not always to be reliable.",
      "parentUuid": "bf51134e_072ba494",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_b894958c",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T13:57:56Z",
      "side": 1,
      "message": "Yes there are plans, I think there was a problem with the version of the packages in Ubuntu, I will double-check. Could this be a follow-up for this patch in case we need such a change ?",
      "parentUuid": "bf51134e_ea6637bb",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_86f5cbcd",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-14T12:37:10Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "bf51134e_b894958c",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_97e7e912",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 281,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "Is this still relevant? The cited bug has long been fixed.",
      "range": {
        "startLine": 278,
        "startChar": 8,
        "endLine": 281,
        "endChar": 99
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_26ba2d6d",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 281,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "++ will be removed",
      "parentUuid": "bf51134e_97e7e912",
      "range": {
        "startLine": 278,
        "startChar": 8,
        "endLine": 281,
        "endChar": 99
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_b7714d47",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "This makes it difficult to override settings per job, also not all supported extensions must always be enabled. Is a more flexible solution possible here?",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_c4124a58",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "This is only the extensions supported by the Neutron OVN driver [0]\n\nI have to take a look at how other drivers are doing this to see how we can make it more flexible. Right now we use these listing of extensions here in DevStack and also in python code [1]\n\nWe could perhaps have the list of extensions in the job definition but, I think that\u0027s less flexible no ?\n\n[0] https://github.com/openstack/neutron/blob/master/neutron/common/ovn/extensions.py\n\n[1] https://github.com/openstack/neutron/blob/206ce246768d6fb04b6bd92e189188f6702c74a7/neutron/services/ovn_l3/plugin.py#L67-L68",
      "parentUuid": "bf51134e_b7714d47",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_0aff2bab",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T11:04:59Z",
      "side": 1,
      "message": "Well currently the list is defined in the job definitions like https://opendev.org/openstack/neutron-tempest-plugin/src/branch/master/zuul.d/master_jobs.yaml#L8 , this new code does a hard override of those, which doesn\u0027t fit well together IMO. I\u0027d like to see a solution that is somehow consistent for all neutron jobs, having the option to change things per job instead of having a list hardcoded in code seems the better approach to me, but I\u0027m mainly concerned about one thing overriding the other, so please discuss within the neutron team how you could consistenly solve this.",
      "parentUuid": "bf51134e_c4124a58",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_9331b25c",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T13:57:56Z",
      "side": 1,
      "message": "Indeed it\u0027s not ideal. I was speaking with Daniel and I have an idea that goes like:\n\nRight now we have two lists, the one that you linked that contains all extensions and another with all extensions supported by ML2/OVN.\n\nWhat I could do is an intersection on these lists and in here we try to enable everything that is in the first list minus what is not supported by OVN (based on the second list) and log a message with the extensions being disabled telling why it has been disabled.\n\nThat way if a custom job wants to have a smaller list of extensions in it\u0027s job definition, the devstack module will try to enable only those instead of everything that is suported by OVN.\n\nDoes it sound feasible/acceptable ?",
      "parentUuid": "bf51134e_0aff2bab",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_4610d300",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-14T12:37:10Z",
      "side": 1,
      "message": "Sounds good to me.",
      "parentUuid": "bf51134e_9331b25c",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_dc3312f5",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-14T14:09:32Z",
      "side": 1,
      "message": "I\u0027ve implemented this mechanism in the latest patch-set, the logic is in a function called filter_network_api_extensions [0].\n\n[0] https://review.opendev.org/#/c/734621/9/lib/neutron_plugins/ovn@394",
      "parentUuid": "bf51134e_4610d300",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_77921559",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 425,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "This is redundant, one export is enough.",
      "range": {
        "startLine": 425,
        "startChar": 8,
        "endLine": 425,
        "endChar": 15
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_0419e278",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 425,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "++",
      "parentUuid": "bf51134e_77921559",
      "range": {
        "startLine": 425,
        "startChar": 8,
        "endLine": 425,
        "endChar": 15
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_570b917b",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "Is this only needed on the controller for multinode jobs? Nova just disabled n-api-meta on computes.",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_e42e6e8a",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "In the case of OVN the ovn-metadata-agent will run on the compute nodes, it\u0027s a distributed service. So I believe we still need this.",
      "parentUuid": "bf51134e_570b917b",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_6a298735",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T11:04:59Z",
      "side": 1,
      "message": "So I think then you need to drop the dependency on n-api-meta. Can you double-check this by running a multinode job that exercises the metadata API?",
      "parentUuid": "bf51134e_e42e6e8a",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_d876a9d8",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 23804
      },
      "writtenOn": "2020-07-10T13:27:16Z",
      "side": 1,
      "message": "Right, good point on the multinode... OVN metadata service just proxies instances requests from the compute to the Nova metadata api endpoint.\n\nThe n-api-meta must be deployed in the cluster but not necessarily on the compute.",
      "parentUuid": "bf51134e_6a298735",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_1874a135",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T13:57:56Z",
      "side": 1,
      "message": "Thanks for the reply, I just checked it and I was wrong. Apprently the n-api-meta is running only on controllers for the multinode job [0], for computes it\u0027s disabled as you pointed out [1].\n\nSo I think the code is OK ?\n\n[0] https://130e95a9c5888f92af5c-5775ad363b5cad1640e005d0e8356875.ssl.cf2.rackcdn.com/735097/13/check/tempest-multinode-full-py3/31ae468/controller/logs/devstacklog.txt\n\n[1] https://130e95a9c5888f92af5c-5775ad363b5cad1640e005d0e8356875.ssl.cf2.rackcdn.com/735097/13/check/tempest-multinode-full-py3/31ae468/compute1/logs/devstacklog.txt",
      "parentUuid": "bf51134e_6a298735",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_26079fcc",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-14T12:37:10Z",
      "side": 1,
      "message": "Well with the nested conditionals as they are now, this option will only be set on the controller, now on the computes. If that is correct, then fine. If not, you\u0027ll need to drop the outer if block.",
      "parentUuid": "bf51134e_1874a135",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_3ca68e10",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-14T14:09:32Z",
      "side": 1,
      "message": "Right yeah, I double checked with Daniel which was the author of these changes (and commented here too) and this is fine, this only needs to be enabled in the controller nodes.",
      "parentUuid": "bf51134e_26079fcc",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_7753356c",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 599,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "What is this for?",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_64589e30",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 599,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "Good point, no idea[0]. I can try to get rid of it.\n\n[0] Since I copied the code from the neutron tree as-is I don\u0027t know all of it.",
      "parentUuid": "bf51134e_7753356c",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_cb1edcb9",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 690,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "why not use\n\nmodprobe -q -r $all_those_mods || true\n\nwould also get rid of that helper func",
      "range": {
        "startLine": 688,
        "startChar": 4,
        "endLine": 690,
        "endChar": 65
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_44763aa6",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 690,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "++ will do",
      "parentUuid": "bf51134e_cb1edcb9",
      "range": {
        "startLine": 688,
        "startChar": 4,
        "endLine": 690,
        "endChar": 65
      },
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_8b3fc423",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 743,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-07-10T07:24:13Z",
      "side": 1,
      "message": "This isn\u0027t a plugin anymore, can this be handled in nova code directly?",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_c469aabe",
        "filename": "lib/neutron_plugins/ovn",
        "patchSetId": 6
      },
      "lineNbr": 743,
      "author": {
        "id": 6773
      },
      "writtenOn": "2020-07-10T08:51:24Z",
      "side": 1,
      "message": "I remember this was being invoked by the new neutron devstack module (instead of the neutron-legacy) but maybe just because we were a plugin as you mentioned. I can try to get rid of it here.",
      "parentUuid": "bf51134e_8b3fc423",
      "revId": "40fe6f126529c62e3b11b0e91592d2f241919f4b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
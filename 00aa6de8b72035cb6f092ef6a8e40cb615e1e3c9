{
  "comments": [
    {
      "key": {
        "uuid": "AAAAU3//j+0\u003d",
        "filename": "extras.d/50-ironic.sh",
        "patchSetId": 11
      },
      "lineNbr": 28,
      "author": {
        "id": 2750
      },
      "writtenOn": "2014-02-25T22:32:25Z",
      "side": 1,
      "message": "is_service_enabled is an or, so I\u0027m sure this list should be shorter than this.",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//f5s\u003d",
        "filename": "extras.d/50-ironic.sh",
        "patchSetId": 11
      },
      "lineNbr": 28,
      "author": {
        "id": 8003
      },
      "writtenOn": "2014-02-26T14:22:16Z",
      "side": 1,
      "message": "all that services are really necessary for ironic testing. Ironic needs glance, keystone, nova and neutron as well. \n\nDo you have an idea how to shorten this list?",
      "parentUuid": "AAAAU3//j+0\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//jcE\u003d",
        "filename": "extras.d/50-ironic.sh",
        "patchSetId": 11
      },
      "lineNbr": 28,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-02-26T20:51:38Z",
      "side": 1,
      "message": "it also still supports aliases, so you could just test for \u0027glance ironic nova neutron key\u0027",
      "parentUuid": "AAAAU3//j+0\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//Zuo\u003d",
        "filename": "extras.d/50-ironic.sh",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-02-26T20:51:38Z",
      "side": 1,
      "message": "Is there not a system-level command to do this?  ie:\n\n service atftpd stop",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//ZyA\u003d",
        "filename": "files/apts/ironic",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-02-26T20:51:38Z",
      "side": 1,
      "message": "Sort these please",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//j+U\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 140,
      "author": {
        "id": 2750
      },
      "writtenOn": "2014-02-25T22:32:25Z",
      "side": 1,
      "message": "this should be set to SERVICE_HOST as a default",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//fyg\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 140,
      "author": {
        "id": 8003
      },
      "writtenOn": "2014-02-26T14:22:16Z",
      "side": 1,
      "message": "Tftp-server should be easily available inside of neutron network. It seems to be very tricky to let particular instance to get access from inside of neutron network to SERVICE_HOST. \n\nSetting tftp_server to SERVICE_HOST just will perform SNAT from private network to router IP when instance will be trying to boot. It seems this breaks tftp :(",
      "parentUuid": "AAAAU3//j+U\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//Z0k\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 140,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-02-26T20:51:38Z",
      "side": 1,
      "message": "Hard-coding it is also a bad idea.  Presumably this IP is based on _something_ configurable, like the public or private network address?",
      "parentUuid": "AAAAU3//fyg\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//bsA\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 269,
      "author": {
        "id": 5805
      },
      "writtenOn": "2014-02-26T20:11:31Z",
      "side": 1,
      "message": "is 777 required? you chown below the directory below.",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//j+E\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 287,
      "author": {
        "id": 2750
      },
      "writtenOn": "2014-02-25T22:32:25Z",
      "side": 1,
      "message": "why aren\u0027t these getting installed into something usable by the system without the path change?",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//dXE\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 287,
      "author": {
        "id": 8003
      },
      "writtenOn": "2014-02-26T14:22:16Z",
      "side": 1,
      "message": "ok, i\u0027ll fix path issue.",
      "parentUuid": "AAAAU3//j+E\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//ZyQ\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 287,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-02-26T20:51:38Z",
      "side": 1,
      "message": "They should be written so they do not need to have the PATH set to find the other scripts, if that is required.  Other scripts in tools/ have examples of this.",
      "parentUuid": "AAAAU3//dXE\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//j9c\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 295,
      "author": {
        "id": 2750
      },
      "writtenOn": "2014-02-25T22:32:25Z",
      "side": 1,
      "message": "so this is a lot of logic that I\u0027m surprised isn\u0027t an ironic tool",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAU3//dXc\u003d",
        "filename": "lib/ironic",
        "patchSetId": 11
      },
      "lineNbr": 295,
      "author": {
        "id": 8003
      },
      "writtenOn": "2014-02-26T14:22:16Z",
      "side": 1,
      "message": "right. But this tool (or the another script with the same functionality)  is necessasy for performing ironic integration testing. If i put them in non correct directory, let me know where is better place to put them. Thanks!",
      "parentUuid": "AAAAU3//j9c\u003d",
      "revId": "00aa6de8b72035cb6f092ef6a8e40cb615e1e3c9",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
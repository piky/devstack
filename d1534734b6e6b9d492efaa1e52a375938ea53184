{
  "comments": [
    {
      "key": {
        "uuid": "9a80dd14_f3ee44ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "L3 tunneling, specifically - VLANs are not addressed by this patch, and generally don\u0027t change the MTU anyway (and honestly the way the patch is written it\u0027s not clear that was a conscious connection you made).",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_93b7c8f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "Why wouldn\u0027t this work with a linuxbridge driver? The DHCP agent is independent.",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_bf0ac623",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 5803
      },
      "writtenOn": "2015-03-07T06:38:59Z",
      "side": 1,
      "message": "There is quadrillion of neutron driver, the ml2-ovs-vxlan is the most commonly used in the dev envs including the gate jobs, so this is the primary target for now.",
      "parentUuid": "9a80dd14_93b7c8f4",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_451bb872",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-07T23:02:45Z",
      "side": 1,
      "message": "How would a user of devstack know that it works for some configurations of OVS, and not other devstack-supported network configs?  It\u0027s not brought to their attention.",
      "parentUuid": "9a80dd14_bf0ac623",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_1346784f",
        "filename": "functions-common",
        "patchSetId": 6
      },
      "lineNbr": 747,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "This is the segment MTU size for the segment that the interface is on, assuming I can find an interface with this source IP and also making a few key assumptions about how the network interfaces are configured.  (So in fact it\u0027s probably the segment MTU but it could certainly be wrong.)  But it is not the path MTU, which is what actually affects L3 encapsulations.\n\nPlaying the odds, it\u0027s *probably* going to work, but it\u0027s certainly not guaranteed to be right and it\u0027s actually very hard to prove it\u0027s wrong - which means even with this change devstack will mess up the MTU of deployments in a way the user will discover at a late stage.",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_32060d1e",
        "filename": "functions-common",
        "patchSetId": 6
      },
      "lineNbr": 747,
      "author": {
        "id": 5803
      },
      "writtenOn": "2015-03-07T06:38:59Z",
      "side": 1,
      "message": "The patch main goal is to help in very simple 2-3 vm or 2-3 physical machine setups, including multinod- gate jobs, with the most commonly used dev setup.\n\nIn most cases these (host) test machines gets the right MTU from their dhcp server (for example from openstack).",
      "parentUuid": "9a80dd14_1346784f",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_c51ec85e",
        "filename": "functions-common",
        "patchSetId": 6
      },
      "lineNbr": 747,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-07T23:02:45Z",
      "side": 1,
      "message": "Your assumption is wrong. DHCP provides the correct segment MTU to the interface, which wil again reset it.  The path MTU is not guaranteed to be equal to the segment MTU.\n\nNow, granted, in simple cases the path and segment MTU are the same.  But there\u0027s nothing in this patch that acknowledges that, let alone making it known to the devstack user.  Again, you\u0027re solving a subset of the entire problem but you are not making that clear to whoever is using devstack.",
      "parentUuid": "9a80dd14_32060d1e",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_d3adc0ea",
        "filename": "lib/neutron",
        "patchSetId": 6
      },
      "lineNbr": 1407,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "dnsmasq not dnsmask",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_33eb7c14",
        "filename": "lib/neutron",
        "patchSetId": 6
      },
      "lineNbr": 1412,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "Works if and only if all your networks have the same MTU.  If your machine has interfaces with an MTU of 1500, it\u0027s likely your external and provider networks have an MTU of 1500 and any networks created using GRE or VXLAN have an MTU somewhat smaller.  This pretty much guarantees that you\u0027ll get the wrong value.\n\nAlso, this implies that the outward facing interface of routers has a different MTU to the inward facing ones.  I\u0027ve not seen anything in this patch that will make that work correctly - is it addressed?",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_df7e9aae",
        "filename": "lib/neutron",
        "patchSetId": 6
      },
      "lineNbr": 1412,
      "author": {
        "id": 5803
      },
      "writtenOn": "2015-03-07T06:38:59Z",
      "side": 1,
      "message": "Your router needs send ask for fragmentation or do the fragmentation, The patch assumes you increased the MTU on your phys dev, because you already did the right thing on the routers/switches.",
      "parentUuid": "9a80dd14_33eb7c14",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_e57f4c64",
        "filename": "lib/neutron",
        "patchSetId": 6
      },
      "lineNbr": 1412,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-07T23:02:45Z",
      "side": 1,
      "message": "To give an example: let\u0027s say I have one interface which serves at the interface over which tunnels are carried and also, independently, the router external network, and it has an MTU of 2000 set on the interface.  (If this doesn\u0027t make you happy you can also consider a 2-interface case with the same MTU on both interfaces; it works the same.)\n\nInterfaces on tenant virtual networks will have an MTU of (2000 - the encap size).\nInterfaces on the external network should have an MTU of 2000 (which is also what non-Openstack devices on that network will have configured as their MTU).\n\nIf a VM or router is connected to the external network and its MTU is *not* 2000, it will fail to communicate with its upstream router - some packets will be sent from one side to the other that are too large to be received, and will be dropped.  For instance, your patch will calculate an MTU of 1950 (or whatever) based on the encap and set it for all networks.  The upstream interface of neutron routers, connected to the external network, will have an MTU of 1950. The next machine upstream of Openstack has an MTU set of 2000, and will occasionally transmit packets of more than 1950 bytes to the Neutron routers on the Openstack external network based on the MTU set on its interface.  Openstack will drop them because they are bigger than the 1950 MTU of its routers.\n\nThe upstream router *will* fragment packets, absolutely.  However, it will only do it if its MTU indicates that it has to do it, and in this case it doesn\u0027t.",
      "parentUuid": "9a80dd14_df7e9aae",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_42ec81f3",
        "filename": "lib/neutron",
        "patchSetId": 6
      },
      "lineNbr": 1412,
      "author": {
        "id": 5803
      },
      "writtenOn": "2015-03-09T05:34:40Z",
      "side": 1,
      "message": "The physical router knows all interfaces segment MTU, and it can do PMTU discovery.\nThe worst thing what a physical router can do is silently drop the frame, in this case the router is miss configured.\n\nUnfortunately OVS does silent drops, that\u0027s why we need to configure mtus.\n\nI did not added br-ex mtu yet :(\nhttps://github.com/openstack-infra/devstack-gate/blob/master/devstack-vm-gate.sh#L532\n\nThis is what you actually miss ?",
      "parentUuid": "9a80dd14_e57f4c64",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_d3db007a",
        "filename": "lib/neutron_plugins/openvswitch_agent",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "dnsmasq not dnsmask",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_93cd08ba",
        "filename": "lib/neutron_plugins/ovs_base",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-06T22:16:19Z",
      "side": 1,
      "message": "Segment MTU is not the same as path MTU.  The interface\u0027s confgured MTU is for the L2 segment it\u0027s on.  It\u0027s possible that the maximum size of unfragmented packet it can get to any specific IP (for instance, another compute host) is smaller than this size.  \n\nThus this approach will work for people except when it doesn\u0027t - it\u0027s far from a comprehensive fix.  I\u0027ve not seen anything in the comments that makes this clear, and I wouldn\u0027t necessarily expect your average devstack user to be reading the comments anyway.",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_ff527e33",
        "filename": "lib/neutron_plugins/ovs_base",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 5803
      },
      "writtenOn": "2015-03-07T06:38:59Z",
      "side": 1,
      "message": "It is possible go wrong in a very heterogeneous network, but in this case most likely you wouldn\u0027t changed the MTU on your phys dev to an incompatible value.",
      "parentUuid": "9a80dd14_93cd08ba",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_2595e486",
        "filename": "lib/neutron_plugins/ovs_base",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 3217
      },
      "writtenOn": "2015-03-07T23:02:45Z",
      "side": 1,
      "message": "This has nothing to do with the value on the physical device (which is correct so long as it agrees with the network segment it\u0027s attached to) but I agree it\u0027s a rare case.  My issue is that there\u0027s no indication to the devstack user that it won\u0027t work or what to do about it.",
      "parentUuid": "9a80dd14_ff527e33",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a80dd14_523f18d6",
        "filename": "lib/neutron_plugins/ovs_base",
        "patchSetId": 6
      },
      "lineNbr": 164,
      "author": {
        "id": 6698
      },
      "writtenOn": "2015-03-06T16:43:49Z",
      "side": 1,
      "message": "for neutron, can it just use Q_GUEST_DEVICE_MTU to set the the segment mtu, without subtracting the protocol.",
      "revId": "d1534734b6e6b9d492efaa1e52a375938ea53184",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
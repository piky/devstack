{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e16ceae8_1c803e0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9656
      },
      "writtenOn": "2023-04-21T16:10:19Z",
      "side": 1,
      "message": "This job confirms this change allows to build OVN (or any other component) from a git hash: https://zuul.opendev.org/t/openstack/build/32e2ed16a3404bfb8176f329dd897de6/log/job-output.txt (see OVN_BRANCH in the output).",
      "revId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae011d9c_138aacca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 22873
      },
      "writtenOn": "2023-04-26T08:49:12Z",
      "side": 1,
      "message": "lgtm, it seems something maybe changed with the --branch arg? .. anyway, based on the comment above the modified lines we can see, that we wanted to support tags (being able to checkout to a specific tag) ... the new code works well for tags as well as for branches",
      "revId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d4da780_1abd50c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9656
      },
      "writtenOn": "2023-05-03T14:06:25Z",
      "side": 1,
      "message": "I\u0027ve checked git builtin/clone.c, and it seems like it only looks for the ref in the list of branches and tags. Regular commits were never accepted:\n\nhttps://github.com/git/git/blob/69c786637d7a7fe3b2b8f7d989af095f5f49c3a8/builtin/clone.c#L471-L489\n\nThe only theoretic option I see is if this code was written prior to deployment of git that includes this patch: https://github.com/git/git/commit/920b691fe4da8115f9b79901411c0cc5fff17efe but it\u0027s very very old. And without the patch, git was checking out HEAD if it couldn\u0027t find the passed ref, so even with that it was always broken.",
      "parentUuid": "ae011d9c_138aacca",
      "revId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Priority",
        "description": {
          "value": "Review priority"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Review-Priority\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Review-Priority=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Review-Priority=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e8915786e1e007742f47fee507b1b6288b6cedae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "bf51134e_4ad8f11c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-06-24T06:33:01Z",
      "side": 1,
      "message": "Where is this going to be used? Is there some glance or nova job that depends on this to actually exercise this option? If yes, please add a reference as \"Needed-By:\"",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_b6c92fad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 4393
      },
      "writtenOn": "2020-06-24T13:35:23Z",
      "side": 1,
      "message": "It\u0027s going to have to be used by nova\u0027s multistore ceph job at least. I\u0027ve never added a Needed-By link, but.. sure.",
      "parentUuid": "bf51134e_4ad8f11c",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_6ae335da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-06-24T06:33:01Z",
      "side": 1,
      "message": "This doesn\u0027t work as we consume OSC from pypi it seems.",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_56d89379",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 4393
      },
      "writtenOn": "2020-06-24T13:35:23Z",
      "side": 1,
      "message": "I was depends-on\u0027ing this from a job that configures osc to be built from git. I just got in and haven\u0027t checked that zuul kept that dep all the way through here, but that was the intention.",
      "parentUuid": "bf51134e_6ae335da",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_4abd9100",
        "filename": "functions",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-06-24T06:33:01Z",
      "side": 1,
      "message": "Just being curious: Is there a technical reason for this or is this just a bug in glance that prevents this?",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_16b3bb4e",
        "filename": "functions",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 4393
      },
      "writtenOn": "2020-06-24T13:35:23Z",
      "side": 1,
      "message": "Yeah, glance is unable to spawn background threads that run to completion when used under uwsgi. Nova has the same problem, which prevents checking things like rabbit heartbeats, which we\u0027ve had to squelch since the move to uwsgi.\n\nSince things like import format conversion, metadata tagging, and import copy-to-store all require background threads in the glance-api worker, these features will never work under uwsgi.\n\nTBH, my next step after getting all this stuff working and tested with WSGI_MODE\u003dmod_wsgi, was going to be to suggest a way to make glance-api never run under uwsgi, since it pretty much can\u0027t function normally at all in that way. At RedHat, we don\u0027t run it under uwsgi in the product that way, and testing it like that makes this not very realistic.",
      "parentUuid": "bf51134e_4abd9100",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_6a34d593",
        "filename": "functions",
        "patchSetId": 4
      },
      "lineNbr": 406,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-06-24T06:33:01Z",
      "side": 1,
      "message": "img_property, same below",
      "range": {
        "startLine": 406,
        "startChar": 97,
        "endLine": 406,
        "endChar": 111
      },
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_0a239957",
        "filename": "functions",
        "patchSetId": 4
      },
      "lineNbr": 433,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-06-24T06:33:01Z",
      "side": 1,
      "message": "Insert $img_property here, too?",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_cab36109",
        "filename": "lib/tempest",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-06-24T06:33:01Z",
      "side": 1,
      "message": "Can you please add a retry counter with a limit? Waiting forever without a timeout when somethings gets stuck should be avoided.\n\nI\u0027m also unsure whether this wait should actually happen here or directly after the image upload in lib/glance, which would also protect other possible consumers.",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51134e_36e4ff3b",
        "filename": "lib/tempest",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 4393
      },
      "writtenOn": "2020-06-24T13:35:23Z",
      "side": 1,
      "message": "Waiting here makes the job take less time because we overlap the import operation with more stack setup. Only here does it matter, and if you were to not enable tempest, it wouldn\u0027t matter if it didn\u0027t finish by the time devstack ended.\n\nYes, I can add a limit. This was to catch an error so we could see it and I relied on the job timeout to eventually kill it.",
      "parentUuid": "bf51134e_cab36109",
      "revId": "f308e76d6547b57a7d66bb7d1eb64337c6e8cac0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
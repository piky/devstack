{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fc6578a2_85fc299b",
        "filename": "lib/tempest",
        "patchSetId": 2
      },
      "lineNbr": 690,
      "author": {
        "id": 22873
      },
      "writtenOn": "2022-03-28T08:33:28Z",
      "side": 1,
      "message": "I found these but I\u0027m not sure they can/should be added for the stable/yoga release:\n\nsubnet-dns-publish-fixed-ip\ntrunk\nvlan-transparent\nsegment\nsecurity-groups-shared-filtering\nsecurity-groups-normalized-cidr\nquota-check-limit\nqos-rule-type-filter\nqos-rules-alias\nqos\nqos-bw-limit-direction\nqos-default\nqos-fip\nqos-gateway-ip\nport-resource-request\nfloating-ip-port-forwarding\nfloating-ip-port-forwarding-description\nfloating-ip-port-forwarding-port-ranges\nlogging\ndns-domain-ports\ndns-integration\ndns-integration-domain-keywords\nexpose-port-forwarding-in-fip",
      "range": {
        "startLine": 690,
        "startChar": 61,
        "endLine": 690,
        "endChar": 62
      },
      "revId": "19cef3789483d8410fc4576cdb7c386ef590e29d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f0be34e_98dcdcd3",
        "filename": "lib/tempest",
        "patchSetId": 2
      },
      "lineNbr": 690,
      "author": {
        "id": 11975
      },
      "writtenOn": "2022-03-28T12:19:18Z",
      "side": 1,
      "message": "Extensions:\n\nsecurity-groups-shared-filtering\nsecurity-groups-normalized-cidr\nquota-check-limit\n\nare supported by ML2 plugin so will be available in any configuration for sure and can be added here as default extensions.\n\nEverything else what You mentioned are extensions which can be enabled by enabling some service plugin (qos, segments, portforwardings, logging, trunk), extension drivers (dns integration) or config option (vlan-transparent). So I wouldn\u0027t add them to the list of default extensions.\n\nAlso that list of default extensions can vary depending on the backend (ML2/OVN or something else) used. So maybe it would be good to prepare list based on the Q_AGENT variable? But that can be done as follow-up patch for sure.",
      "parentUuid": "fc6578a2_85fc299b",
      "range": {
        "startLine": 690,
        "startChar": 61,
        "endLine": 690,
        "endChar": 62
      },
      "revId": "19cef3789483d8410fc4576cdb7c386ef590e29d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b5ae068_4058f64e",
        "filename": "lib/tempest",
        "patchSetId": 2
      },
      "lineNbr": 690,
      "author": {
        "id": 22873
      },
      "writtenOn": "2022-03-28T15:30:14Z",
      "side": 1,
      "message": "thank you for the feedback! yeah, it may vary, the list contains only the default ones - in case user didn\u0027t set specific extensions - in case a user wants to enable more extensions (or different subset of them) it can be done via NETWORK_API_EXTENSIONS var which will override DEFAULT_NET_EXT one.",
      "parentUuid": "9f0be34e_98dcdcd3",
      "range": {
        "startLine": 690,
        "startChar": 61,
        "endLine": 690,
        "endChar": 62
      },
      "revId": "19cef3789483d8410fc4576cdb7c386ef590e29d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}
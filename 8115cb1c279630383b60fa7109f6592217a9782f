{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_a56558b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 11604
      },
      "writtenOn": "2019-12-04T00:44:43Z",
      "side": 1,
      "message": "this should help with the l2 guest but i was also suggestign we should enable the random number generator in the vm we get form the providers too.\n\nthat said this is a good first start\n\nif the host vm runs out of entropy it will cause issues for the guest vms we need good entropy all the way down ideally.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 63
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_2b14cf9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-12-04T16:06:38Z",
      "side": 1,
      "message": "We can suggest that providers do that for us but have no control over it ultimately. This is something we can do and do have control over (and I believe slaweq was saying the issue is in entropy in the inner guest anyways which this addresses though haveged on the test node and virtio device in the inner guest).\n\nNote we should already address entropy availability on all of our test nodes via our use of haveged. It is possible that having our test node providers enable the virt io device would help, but my understanding is that haveged is supposed to be a proper stand in.",
      "parentUuid": "3fa7e38b_a56558b1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 63
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_255ac8f1",
        "filename": "functions",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 11604
      },
      "writtenOn": "2019-12-04T00:44:43Z",
      "side": 1,
      "message": "yep that should also work.",
      "range": {
        "startLine": 295,
        "startChar": 3,
        "endLine": 295,
        "endChar": 55
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_250f28e1",
        "filename": "functions",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 11604
      },
      "writtenOn": "2019-12-04T00:44:43Z",
      "side": 1,
      "message": "you dont seem to be enabling this for x86\nalso devstack should only enable this if you are deploying libvirt as the virt driver.",
      "range": {
        "startLine": 366,
        "startChar": 3,
        "endLine": 372,
        "endChar": 6
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_06f30f0b",
        "filename": "functions",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 15334
      },
      "writtenOn": "2019-12-04T10:16:04Z",
      "side": 1,
      "message": "I\u0027m reading this as passing \u0027--property hw_rng_model\u003dvirtio\u0027 for all architectures and then passing these *additional* options for some specific architectures. Good point on these being libvirt-only, though I don\u0027t think that matters much since they\u0027ll simply be ignored for other virt drivers",
      "parentUuid": "3fa7e38b_250f28e1",
      "range": {
        "startLine": 366,
        "startChar": 3,
        "endLine": 372,
        "endChar": 6
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_cb9bbb14",
        "filename": "functions",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-12-04T16:06:38Z",
      "side": 1,
      "message": "Yes, this is where we set the image properties for all images. And I agree I think we should be able to set them as an image property then let nova decide if it can provide that functionality or not at boot time.",
      "range": {
        "startLine": 380,
        "startChar": 94,
        "endLine": 380,
        "endChar": 105
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_05578ccc",
        "filename": "lib/nova",
        "patchSetId": 1
      },
      "lineNbr": 1110,
      "author": {
        "id": 11604
      },
      "writtenOn": "2019-12-04T00:44:43Z",
      "side": 1,
      "message": "yep this is correct",
      "range": {
        "startLine": 1110,
        "startChar": 105,
        "endLine": 1110,
        "endChar": 135
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_0641cf0a",
        "filename": "lib/nova",
        "patchSetId": 1
      },
      "lineNbr": 1110,
      "author": {
        "id": 15334
      },
      "writtenOn": "2019-12-04T10:16:04Z",
      "side": 1,
      "message": "Why are we configuring *both* the flavor extra spec and image metadata property though? Surely one or the other would do?",
      "parentUuid": "3fa7e38b_05578ccc",
      "range": {
        "startLine": 1110,
        "startChar": 105,
        "endLine": 1110,
        "endChar": 135
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_ab643f4e",
        "filename": "lib/nova",
        "patchSetId": 1
      },
      "lineNbr": 1110,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-12-04T16:06:38Z",
      "side": 1,
      "message": "All of the documentation I could find (mostly blog posts because this is really poorly documented) indicate both the flavor and image property are necessary to enable the functionality in the running guest.",
      "parentUuid": "3fa7e38b_0641cf0a",
      "range": {
        "startLine": 1110,
        "startChar": 105,
        "endLine": 1110,
        "endChar": 135
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_455d84ea",
        "filename": "lib/nova_plugins/hypervisor-libvirt",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 11604
      },
      "writtenOn": "2019-12-04T00:44:43Z",
      "side": 1,
      "message": "you should not do this.\n\nwe should be useing /dev/urandom whcih is what nova already defaults too.",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_a5e8f8de",
        "filename": "lib/nova_plugins/hypervisor-libvirt",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 11604
      },
      "writtenOn": "2019-12-04T00:48:26Z",
      "side": 1,
      "message": "note we change teh default path to /dev/urandom in\n\nhttps://github.com/openstack/nova/commit/814bfd937238cbd211ea30805c36ae682cfd7b48\n\nso this would effectively regress that default change",
      "parentUuid": "3fa7e38b_455d84ea",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_e6c833a9",
        "filename": "lib/nova_plugins/hypervisor-libvirt",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 15334
      },
      "writtenOn": "2019-12-04T10:16:04Z",
      "side": 1,
      "message": "Correct. This is enabled by default and therefore not necessary here. It might be necessary in backports.",
      "parentUuid": "3fa7e38b_a5e8f8de",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_6b4727a5",
        "filename": "lib/nova_plugins/hypervisor-libvirt",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 4146
      },
      "writtenOn": "2019-12-04T16:06:38Z",
      "side": 1,
      "message": "Ok. From documentation I could find there wasn\u0027t any indication that there was a valid preset default. Can you all double check that nova docs are properly updated?\n\nPossible I was just looking at older branch docs.",
      "parentUuid": "3fa7e38b_e6c833a9",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "8115cb1c279630383b60fa7109f6592217a9782f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
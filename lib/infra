# lib/infra
#
# Functions to install infrastructure projects needed by other projects
# early in the cycle. We need this so we can do things like gate on
# requirements as a global list

# Dependencies:
#
# - ``functions`` file

# ``stack.sh`` calls the entry points in this order:
#
# - unfubar_setuptools
# - install_infra

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Defaults
# --------
PBR_DIR=$DEST/pbr
REQUIREMENTS_DIR=$DEST/requirements
OSLA_DIR=$DEST/os-loganalyze

# Entry Points
# ------------

# unfubar_setuptools() - Unbreak the giant mess that is the current state of setuptools
function unfubar_setuptools {
    # this is a giant game of who's on first, but it does consistently work
    # there is hope that upstream python packaging fixes this in the future
    echo_summary "Unbreaking setuptools"
    pip_install -U setuptools
    pip_install -U pip
    uninstall_package python-setuptools
    pip_install -U setuptools
    pip_install -U pip
}


# install_infra() - Collect source and prepare
function install_infra {
    # bring down global requirements
    git_clone $REQUIREMENTS_REPO $REQUIREMENTS_DIR $REQUIREMENTS_BRANCH

    # Install pbr
    git_clone $PBR_REPO $PBR_DIR $PBR_BRANCH
    setup_install $PBR_DIR
}

function install_osloganalyze {
    git_clone $OSLA_REPO $OSLA_DIR $OSLA_BRANCH
    setup_install $OSLA_DIR
}

function configure_osloganalyze {
    # because of overlap with wsgi an horizon, this narrower
    # alias definition of /logs/ needs to come first
    local osla_conf=$(apache_site_config_for 00_osloganalyze)
    if [[ -n "$LOGDIR" ]]; then
        local root=$(dirname $LOGDIR)
        sudo sh -c "sed -e \"
            s,%LOGDIR%,$LOGDIR,g;
            s,%ROOTDIR%,$root,g;
        \" $FILES/apache-osloganalyze.template >$osla_conf"

        sudo a2enmod rewrite
        enable_apache_site 00_osloganalyze
    fi
}

# Restore xtrace
$XTRACE

# Tell emacs to use shell-script-mode
## Local variables:
## mode: shell-script
## End:

#!/bin/bash
#
# lib/dstat
# Functions to start and stop dstat

# Dependencies:
#
# - ``functions`` file

# ``stack.sh`` calls the entry points in this order:
#
# - start_dstat
# - stop_dstat

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace

# start_dstat() - Start running processes, including screen
function start_dstat {
    # A better kind of sysstat, with the top process per time slice
    DSTAT_OPTS="-tcmndrylpg --top-cpu-adv --top-io-adv"

    # also run our peak memory tracker
    # note the peak log file goes into ${SCREEN_LOGDIR} so devstack-gate
    # picks it up automatically.
    run_process dstat "(cd $TOP_DIR; ./tools/peakmem_tracker.sh -x ${SCREEN_LOGDIR}/peakmem.log &) ; dstat $DSTAT_OPTS"
}

# stop_dstat() stop dstat process
function stop_dstat {
    # dstat runs as a console, not as a service, and isn't trackable
    # via the normal mechanisms for DevStack. So lets just do a
    # killall and move on.
    killall dstat || /bin/true
    # get rid of the peak-tracker, if running
    pkill -9 -f peakmem_tracker.sh || /bin/true
}

# Restore xtrace
$XTRACE

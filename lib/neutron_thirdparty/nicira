# Nicira NVP
# ----------

# This third-party addition can be used to configure connectivity between a DevStack instance
# and an NVP Gateway in dev/test environments. In order to use this correctly, the following
# env variables need to be set (e.g. in your localrc file):
#
# * enable_service nicira            --> to execute this third-party addition
# * PUBLIC_BRIDGE                    --> bridge used for external connectivity, typically br-ex
# * NVP_GATEWAY_NETWORK_INTERFACE    --> interface used to communicate with the NVP Gateway
# * NVP_GATEWAY_NETWORK_IP         --> IP with prefix to configure on br-mgmt, e.g. 192.168.0.200/24

# Save trace setting
MY_XTRACE=$(set +o | grep xtrace)
set +o xtrace

# Interface connected to a management network to be configured for
# enabling connectivity with NVP gateway for testing purposes
NVP_GATEWAY_UPLINK_INTERFACE=${NVP_GATEWAY_UPLINK_INTERFACE:-eth0}
NVP_GATEWAY_MGMT_INTERFACE=${NVP_GATEWAY_MGMT_INTERFACE:-eth2}
NVP_GATEWAY_MGMT_BRIDGE=${NVP_GATEWAY_MGMT_BRIDGE:-br-mgmt}
# Re-declare floating range as it's needed also in stop_nicira, which
# is invoked by unstack.sh
FLOATING_RANGE=${FLOATING_RANGE:-172.24.4.224/28}

function configure_nicira() {
    :
}

function init_nicira() {
    if is_set NVP_GATEWAY_NETWORK_IP; then
        # Make sure the interface is up, but not configured
        sudo ifconfig $NVP_GATEWAY_MGMT_INTERFACE up
        sudo ip addr flush $NVP_GATEWAY_MGMT_INTERFACE
        # Create a bridge on the mgmt network interface.
        # NOTE(armando-migliaccio): if running in a nested environment this will work
        # only with mac learning enabled, portsecurity and security profiles disabled
        sudo ovs-vsctl -- --may-exist add-br $NVP_GATEWAY_MGMT_BRIDGE
        sudo ovs-vsctl -- --may-exist add-port $NVP_GATEWAY_MGMT_BRIDGE $NVP_GATEWAY_MGMT_INTERFACE
        nvp_gw_net_if_mac=$(ip link show $NVP_GATEWAY_MGMT_INTERFACE | awk '/ether/ {print $2}')
        sudo ifconfig $NVP_GATEWAY_MGMT_BRIDGE $NVP_GATEWAY_NETWORK_IP hw ether $nvp_gw_net_if_mac
    fi
}

function install_nicira() {
    :
}

function _public_gateway_ip_with_prefix() {
    # NOTE: This info cannot be retrieve from neutron as at this stage it has not yet started
    # The following command will populate public_cidr and public_gateway_ip variables
    echo $PUBLIC_NETWORK_GATEWAY/${FLOATING_RANGE#*/}
}

function start_nicira() {
    # Configure public network gateway IP on interface on NVP gateway's uplink network
    if ! is_service_enabled q-l3 && [[ "$Q_L3_ENABLED" == "True" ]]; then
        ip_to_set=$(_public_gateway_ip_with_prefix)
        sudo ip addr add $ip_to_set dev $NVP_GATEWAY_UPLINK_INTERFACE
    fi
}

function stop_nicira() {
    # Destroy management bridge if configured
    if is_set NVP_GATEWAY_NETWORK_IP; then
        sudo ovs-vsctl del-port $NVP_GATEWAY_MGMT_INTERFACE
        sudo ovs-vsctl del-br $NVP_GATEWAY_MGMT_BRIDGE
        # TODO(salv-orlando): Restore IPs on NVP_GATEWAY_NETWORK_INTERFACE
    fi
    # Always try to unconfigure public network gateway ip
    ip_to_remove=$(_public_gateway_ip_with_prefix)
    sudo ip addr del $ip_to_remove dev $NVP_GATEWAY_UPLINK_INTERFACE
}

# Restore xtrace
$MY_XTRACE

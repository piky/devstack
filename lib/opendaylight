# lib/opendaylight
# Functions to control the configuration and operation of the opendaylight service

# Dependencies:
#
# - ``functions`` file
# # ``DEST`` must be defined
# # ``STACK_USER`` must be defined

# ``stack.sh`` calls the entry points in this order:
#
# - is_opendaylight_enabled
# - install_opendaylight
# - configure_opendaylight
# - init_opendaylight
# - start_opendaylight
# - stop_opendaylight
# - cleanup_opendaylight

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Defaults
# --------

# The IP address of ODL. Set this in local.conf.
# ODL_MGR_IP=

# <define global variables here that belong to this project>
ODL_DIR=$DEST/opendaylight

# The OpenDaylight Package, currently using 'Hydrogen' release
ODL_PKG=distributions-virtualization-0.1.1-osgipackage.zip

# The OpenDaylight URL
ODL_URL=https://nexus.opendaylight.org/content/repositories/opendaylight.release/org/opendaylight/integration/distributions-virtualization/0.1.1

# Set up default directories


# Entry Points
# ------------

# Test if any OpenDaylight services are enabled
# is_opendaylight_enabled
function is_opendaylight_enabled {
    [[ ,${ENABLED_SERVICES} =~ ,"opendaylight" ]] && return 0
    return 1
}

# cleanup_opendaylight() - Remove residual data files, anything left over from previous
# runs that a clean run would need to clean up
function cleanup_opendaylight() {
    :
}

# configure_opendaylight() - Set config files, create data dirs, etc
function configure_opendaylight() {
    # Ensure this is set, if not, die.
    if [ "$ODL_MGR_IP" == "" ]; then
        die $LINENO "When using OpenDaylight, you must configure ODL_MGR_IP to the IP of OpenDaylight."
    fi
}

# init_opendaylight() - Initialize databases, etc.
function init_opendaylight() {
    # clean up from previous (possibly aborted) runs
    # create required data files
    :
}

# install_opendaylight() - Collect source and prepare
function install_opendaylight() {
    :
}

# start_opendaylight() - Start running processes, including screen
function start_opendaylight() {
    :
}

# stop_opendaylight() - Stop running processes (non-screen)
function stop_opendaylight() {
    # FIXME(dtroyer): stop only our screen screen window?
    :
}

# Restore xtrace
$XTRACE

# Tell emacs to use shell-script-mode
## Local variables:
## mode: shell-script
## End:

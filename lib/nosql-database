# lib/nosql-database
# Interface for interacting with different nosql database backends

# Dependencies:
# ``ENABLED_SERVICES`` must be defined

# ``NOSQL_DATABASE_BACKENDS`` will contain a list of available nosql database backends
# after sourcing this file.

# ``ENABLED_NOSQL_DATABASE_BACKENDS`` will contain a list of available and enabled nosql database backends
# after sourcing this file.

# This is a wrapper for the specific nosql database backends available.
# Each nosql database must implement four functions:
#
# - recreate_database_$NOSQL_DATABASE_TYPE
# - install_database_$NOSQL_DATABASE_TYPE
# - configure_database_$NOSQL_DATABASE_TYPE
# - database_connection_url_$NOSQL_DATABASE_TYPE
#
# and call register_nosql_database $NOSQL_DATABASE_TYPE

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Register a database backend
#
#   $1 The name of the nosql database backend
#
# This is required to be defined before the specific database scripts are sourced
function register_nosql_database {
    [ -z "$NOSQL_DATABASE_BACKENDS" ] && NOSQL_DATABASE_BACKENDS=$1 || NOSQL_DATABASE_BACKENDS+=" $1"
}

# Sourcing the nosql database libs sets
for f in $TOP_DIR/lib/nosql/*; do
    source $f;
done

# ``NOSQL_DATABASE_BACKENDS`` now contains a list of the supported databases
# Look in ``ENABLED_SERVICES`` to see if one has been selected
ENABLED_NOSQL_DATABASE_BACKENDS=""
for db in $NOSQL_DATABASE_BACKENDS; do
    if is_service_enabled $db; then
        [ -z "ENABLED_NOSQL_DATABASE_BACKENDS" ] && ENABLED_NOSQL_DATABASE_BACKENDS=$db || ENABLED_NOSQL_DATABASE_BACKENDS+=" $db"
    fi
done


# Functions
# ---------

# Get rid of everything enough to cleanly change nosql database backends
function cleanup_nosql_databases {
    for db in $ENABLED_NOSQL_DATABASE_BACKENDS; do
        cleanup_database_$db
    done
}

# Recreate a given database table
#  $1 The type of nosql database
#  $2 The name of the table
#  $3 The name of column family
function recreate_nosql_database {
    local db_type=$1
    local table_name=$2
    local cf_name=$3
    recreate_database_$db_type $table_name $cf_name
}

# Install the nosql databases
function install_nosql_databases {
    for db in $ENABLED_NOSQL_DATABASE_BACKENDS; do
        install_database_$db
    done
}

# Configure and start the nosql databases
function configure_nosql_databases {
    for db in $ENABLED_NOSQL_DATABASE_BACKENDS; do
        configure_database_$db
    done
}

# Generate an connection URL and output it using echo
#  $1 The type of nosql database
#  $2 The name of the table
function nosql_database_connection_url {
    local db_type=$1
    local table_name=$2
    database_connection_url_$db_type $table_name
}


# Restore xtrace
$XTRACE

# Tell emacs to use shell-script-mode
## Local variables:
## mode: shell-script
## End:

#!/bin/bash
#
# lib/cinder_backends/pure
# Configure the pure driver

# Enable with:
#
#   CINDER_ENABLED_BACKENDS+=,pure:<volume-type-name>

# Dependencies:
#
# - ``functions`` file
# - ``cinder`` configurations

# CINDER_CONF

# configure_cinder_driver - make configuration changes, including those to other services

# Save trace setting
_XTRACE_CINDER_PURE=$(set +o | grep xtrace)
set +o xtrace


# Entry Points
# ------------

# configure_cinder_backend_pure - Set config files, create data dirs, etc
function configure_cinder_backend_pure {
    # To use Pure, set the following in local.conf:
    # CINDER_ENABLED_BACKENDS+=,pure:<volume-type-name>
    # SAN_IP=<vip>
    # PURE_API_TOKEN=<Pure user API token>
    # PURE_PROTOCOL=<iscsi|fc>
    # USE_CHAP_AUTH=<true|false>
    # USE_MULTIPATH_FOR_IMAGE_XFER=<true|false>

    local be_name=$1
    iniset $CINDER_CONF $be_name volume_backend_name $be_name
    iniset $CINDER_CONF $be_name san_ip $SAN_IP
    iniset $CINDER_CONF $be_name cwpure_api_token $PURE_API_TOKEN

    if [[ -n "$USE_CHAP_AUTH" ]] ; then
      iniset $CINDER_CONF $be_name use_chap_auth $USE_CHAP_AUTH
    fi

    if [[ -n "$USE_MULTIPATH_FOR_IMAGE_XFER" ]] ; then
      iniset $CINDER_CONF $be_name use_multipath_for_image_xfer $USE_MULTIPATH_FOR_IMAGE_XFER
    fi

    shopt -s nocasematch
    if [[ "$PURE_PROTOCOL" == "iscsi" ]], then
       iniset $CINDER_CONF $be_name volume_driver "cinder.volume.drivers.pure.PureISCSIDriver"
    fi

    if [[ "$PURE_PROTOCOL" == "fc" ]], then
       iniset $CINDER_CONF $be_name volume_driver "cinder.volume.drivers.pure.PureFCDriver"
    fi	
    shopt -u nocasematch
}


# Restore xtrace
$_XTRACE_CINDER_PURE

# Local variables:
# mode: shell-script
# End:

# lib/cinder_backends/lvm
# Configure the LVM backend

# Enable with:
#
#   CINDER_ENABLED_BACKENDS+=,lvm:lvmname

# Dependencies:
#
# - ``functions`` file
# - ``cinder`` configurations

# CINDER_CONF
# DATA_DIR
# VOLUME_GROUP_NAME

# clean_cinder_backend_lvm - called from clean_cinder()
# configure_cinder_backend_lvm - called from configure_cinder()
# init_cinder_backend_lvm - called from init_cinder()


# Save trace setting
MY_XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Defaults
# --------


# TODO: resurrect backing device...need to know how to set values
#VOLUME_BACKING_DEVICE=${VOLUME_BACKING_DEVICE:-}

VOLUME_NAME_PREFIX=${VOLUME_NAME_PREFIX:-volume-}


# Entry Points
# ------------

function get_volume_group_name {
    local be_name=$2

    local volume_group_name=$VOLUME_GROUP_NAME
    if [[ "-$be_name" != "-" ]]; then
        volume_group_name+="-$be_name"
    fi
    echo $volume_group_name
}

function cleanup_cinder_backend_lvm {
    local be_name=$1

    volume_group_name=$(get_volume_group_name $be_name)

    # Campsite rule: leave behind a volume group at least as clean as we found it
    clean_lvm_volume_group ${volume_group_name}
}

# configure_cinder_backend_lvm - Set config files, create data dirs, etc
# configure_cinder_backend_lvm $name
function configure_cinder_backend_lvm {
    local be_name=$1

    local volume_group_name=$(get_volume_group_name $be_name)

    iniset $CINDER_CONF $be_name volume_backend_name $be_name
    iniset $CINDER_CONF $be_name volume_driver "cinder.volume.drivers.lvm.LVMISCSIDriver"
    iniset $CINDER_CONF $be_name volume_group $volume_group_name

    if [[ "$CINDER_SECURE_DELETE" == "False" ]]; then
        iniset $CINDER_CONF $be_name volume_clear none
    fi
}


function init_cinder_backend_lvm {
    local be_name=$1

    local volume_group_name=$(get_volume_group_name $be_name)

    # Start with a clean volume group
    init_lvm_volume_group ${volume_group_name} $VOLUME_BACKING_FILE_SIZE
}

# Restore xtrace
$MY_XTRACE

# mode: shell-script
# End:

{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7b7c9fa5_7d98f646",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5314
      },
      "writtenOn": "2022-02-01T21:04:31Z",
      "side": 1,
      "message": "This LGTM, and the cinder dependency has merged.  Two nits noted inline.",
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b48989c_32d57517",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-02-02T05:26:50Z",
      "side": 1,
      "message": "Will there be a CI job that tests this? Or does it need special hardware?",
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b79ed84b_bcbca04e",
        "filename": "lib/cinder",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-02-02T05:26:50Z",
      "side": 1,
      "message": "Can we deprecate the old variable and create a warning if it is still used? I would prefer not to keep this nested construct permanently.",
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8adc6d14_b8c74faf",
        "filename": "lib/cinder",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-02-02T05:26:50Z",
      "side": 1,
      "message": "I\u0027d rather propose to just have two versions of these three assinments wrapped in an if/else block, that seem easier to track and debug than using this function call.",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 112,
        "endChar": 55
      },
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54bc2a7d_468be48e",
        "filename": "lib/cinder",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 5314
      },
      "writtenOn": "2022-02-01T21:04:31Z",
      "side": 1,
      "message": "nit: this message and the comment at line 115 could be updated",
      "range": {
        "startLine": 118,
        "startChar": 13,
        "endLine": 118,
        "endChar": 58
      },
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "315022f8_d9caed17",
        "filename": "lib/cinder",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-02-02T05:26:50Z",
      "side": 1,
      "message": "Can we be sure that there are no other possible options? If yes, there should be an explicit guard against misconfiguration (typos) somewhere. Otherwise better use another elif like you do in the install_cinder function below.",
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8f27b6c_51f2c655",
        "filename": "lib/cinder",
        "patchSetId": 2
      },
      "lineNbr": 511,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-02-02T05:26:50Z",
      "side": 1,
      "message": "Declare this a local variable? Also maybe double-check the result to be non-empty?",
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a87ad5ca_500fb475",
        "filename": "lib/cinder_backends/lvm",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-02-02T05:26:50Z",
      "side": 1,
      "message": "leave the target_* options grouped together?",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 58,
        "endChar": 70
      },
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0be95a2_eb112ac3",
        "filename": "lib/lvm",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 5314
      },
      "writtenOn": "2022-02-01T21:04:31Z",
      "side": 1,
      "message": "nit: compare this to line 116 in lib/cinder ... we don\u0027t allow tgtadm as a target_helper for fedora or suse, so this should be unreachable code",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 130,
        "endChar": 6
      },
      "revId": "8456e239742bbf81d878d528f395d51112e835b7",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}
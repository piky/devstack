{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f874fd_5273fffa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 7118
      },
      "writtenOn": "2022-05-19T00:37:16Z",
      "side": 1,
      "message": "This is an opendev gate issue since the nodes use unbound?  The problem being that unbound isn\u0027t responding before devstack starts?\n\nI\u0027m not sure we\u0027ve seen this in other jobs, but that\u0027s probably because after node boot regular jobs do a lot of pre-work that would hide any quick startup race or ordering issues.\n\nIf that is the problem, perhaps we should be looking more closely at the nodepool side -- it seems likely the systemd service bringing this up should not let boot progress until unbound is listening properly.  It not doing that is more likely an oversight in unbound installation than desired behavior.",
      "range": {
        "startLine": 10,
        "startChar": 32,
        "endLine": 10,
        "endChar": 58
      },
      "revId": "5fada16514a6074d61101576d86cb9070af30609",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbb9d621_21d43639",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-05-18T08:50:39Z",
      "side": 1,
      "message": "IMO this doesn\u0027t belong here. Devstack should be able to expect a working host setup. If you reboot the host in the fips playbook, put that check there.",
      "revId": "5fada16514a6074d61101576d86cb9070af30609",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41912281_7f1b9405",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 11628
      },
      "writtenOn": "2022-05-18T14:58:52Z",
      "side": 1,
      "message": "I feel the opposite. Currently if DNS isn\u0027t working, devstack continues to run until it can\u0027t find a package. This error, that a package isn\u0027t found is misleading (bad mirror, bad repo, etc.). I think it\u0027s better to have an explicit test that calls out the true problem early.",
      "parentUuid": "dbb9d621_21d43639",
      "revId": "5fada16514a6074d61101576d86cb9070af30609",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd3b2172_951e3b7d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 11628
      },
      "writtenOn": "2022-05-18T15:03:45Z",
      "side": 1,
      "message": "FYI, the test patch shows this works:\nhttps://zuul.opendev.org/t/openstack/build/654645cad8d444c48de7595ed5f5b1c2/log/job-output.txt#2062\n\nIt required one retry (5 second interval) before the DNS resolved.",
      "revId": "5fada16514a6074d61101576d86cb9070af30609",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a9d4187_47f1dfd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2022-05-19T12:16:50Z",
      "side": 1,
      "message": "\u003e Patch Set 3:\n\u003e \n\u003e Dr. Jens Harbott wrote:\n\u003e \n\u003e \u003e IMO this doesn\u0027t belong here. Devstack should be able to expect a working host\n\u003e \u003e setup. If you reboot the host in the fips playbook, put that check there.\n\u003e \n\u003e The questions then become: What criteria should fips-setup use to determine when a host is \"working\" after reboot? If the definition of \"working\" from the perspective of fips-setup in zuul-jobs is also \"I can resolve records via DNS\" then what DNS record(s) should it attempt to query?\n\nThe answer to the last question should be the same as the answer proposed here. But I also agree with ianw\u0027s comment that there may be an even deeper issue with the way we set up unbound vs. system startup.",
      "revId": "5fada16514a6074d61101576d86cb9070af30609",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc8a24e1_d5d8b973",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9914
      },
      "writtenOn": "2022-05-19T15:27:14Z",
      "side": 1,
      "message": "\u003e Patch Set 3:\n\u003e \n\u003e Dr. Jens Harbott wrote:\n\u003e \n\u003e \u003e The answer to the last question should be the same as the answer proposed here.\n\u003e \n\u003e With my zuul-jobs reviewer hat on, I\u0027m not sure having a generic role hard-code an assumption (or even default to it) that systems should try resolving opendev.org is a good idea. At a minimum, it would need some escape hatch for jobs being run in environments where nodes may not have access to a fully open recursive resolver, either to skip the check or substitute an alternative record which is known to be resolvable by those nodes... but beyond that, should the fips-setup role necessarily even depend on having working DNS resolution?\n\nSeems to me that the fips-setup-role has really nothing to do with whether DNS resolution is working or not.  The only reason it comes up here is because the role happens to reboot the node.\n\nTo Jen\u0027s point though, devstack has every right to expect a \"working system\" to begin with - and while having a check here would be very useful and informative, we don\u0027t check all the many other things that make up a \"working system\".\n\nIan\u0027s suggestion makes the most sense to me.  Whatever sets up the unbound server shouldn\u0027t proceed till we know DNS resolution works, to prevent race conditions.",
      "revId": "5fada16514a6074d61101576d86cb9070af30609",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}
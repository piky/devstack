{
  "comments": [
    {
      "key": {
        "uuid": "AAAAS3//6aQ\u003d",
        "filename": "README.md",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 6735
      },
      "writtenOn": "2013-09-17T09:55:34Z",
      "side": 1,
      "message": "I think it\u0027s worth saying here that you can (and probably should?) use the variable for the config file so if paths are updated the the script still works.\nAlthough I\u0027d also like some nice error messages if you use an environment variable that doesn\u0027t exist",
      "revId": "b28f391f0bcc7261aecb2f1852fb6f753ffe7a3a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAS3//6ec\u003d",
        "filename": "stack.sh",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 6735
      },
      "writtenOn": "2013-09-17T09:55:34Z",
      "side": 1,
      "message": "I\u0027d prefer this to always replace - and perhaps never create localrc (perhaps localrc.generated?).  If I make changes to local.conf I want them to be honoured - even if they are in localrc.\n\nATM it seems as though changes to other sections would be honoured, but not the localrc section.  That could cause lots of confusion particularly when replacing local.conf wholesale.",
      "revId": "b28f391f0bcc7261aecb2f1852fb6f753ffe7a3a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAS3//6eM\u003d",
        "filename": "stack.sh",
        "patchSetId": 4
      },
      "lineNbr": 1457,
      "author": {
        "id": 6735
      },
      "writtenOn": "2013-09-17T09:55:34Z",
      "side": 1,
      "message": "Will this work when we\u0027re using multiple EXTRA_OPTs?\nI haven\u0027t tested in-line, but EXTRA_OPTs will be an array and I think this will only output the first of them?\n\nI\u0027d rather either output everything or nothing and leave it as an exercise to the user to generate the actual values.",
      "revId": "b28f391f0bcc7261aecb2f1852fb6f753ffe7a3a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAS3//6dg\u003d",
        "filename": "stack.sh",
        "patchSetId": 4
      },
      "lineNbr": 1483,
      "author": {
        "id": 6735
      },
      "writtenOn": "2013-09-17T09:55:34Z",
      "side": 1,
      "message": "EXTRA_BAREMETAL_OPTS too?",
      "revId": "b28f391f0bcc7261aecb2f1852fb6f753ffe7a3a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAS3//6bE\u003d",
        "filename": "tests/meta_config.sh",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 6735
      },
      "writtenOn": "2013-09-17T09:55:34Z",
      "side": 1,
      "message": "I\u0027m nervous that this test wouldn\u0027t be included in the standard tests?  If so, it\u0027d be easy to forget to run the tests and therefore break things inadvertently?  I guess we don\u0027t have unit tests for devstack - I\u0027d be happy with a quick sanity check at the start of each run.  If we did that, it\u0027d force them to be kept short.",
      "revId": "b28f391f0bcc7261aecb2f1852fb6f753ffe7a3a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAS3//6cM\u003d",
        "filename": "tests/meta_config.sh",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 6735
      },
      "writtenOn": "2013-09-17T09:55:34Z",
      "side": 1,
      "message": "I think it\u0027d be worth extracting this test to a function to avoid repetition?",
      "revId": "b28f391f0bcc7261aecb2f1852fb6f753ffe7a3a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
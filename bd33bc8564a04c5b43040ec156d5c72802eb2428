{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "685689ca_7bbb1b35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-07-19T09:09:02Z",
      "side": 1,
      "message": "who would set rpc_workers\u003d0 in this scenario and why?\n\nIMO the solution looks pretty hacky, maybe instead we can not automatically do `enable_service neutron-rpc-server` and rely on consumers to do it when needed?",
      "revId": "bd33bc8564a04c5b43040ec156d5c72802eb2428",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29f3d3cd_076a1942",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 16688
      },
      "writtenOn": "2024-07-19T09:16:37Z",
      "side": 1,
      "message": "In ML2/OVN, without any other ML2 driver, for example SR-IOV, that requires agents with RPC communication, there is no need for RPC workers. The OVN metadata agent, that is the only agent deployed by Neutron and located in the compute nodes, access directly to the OVN SB database.\n\nWe should not allow to enable/disable the service itself but rely on the configuration parameter (rpc_workers). The RPC workers service will run along with the WSGI API processes, in the same node (controller). But if we explicitly set rpc_workers\u003d0, then the service will fail (as seen in the CI [1][2]).\n\n[1]https://review.opendev.org/c/openstack/neutron/+/924317?tab\u003dchange-view-tab-header-zuul-results-summary\n[2]For example: https://zuul.opendev.org/t/openstack/build/35384da95f5c4fe8ba754c06999aecc1 (note that this job has rpc_workers\u003d0 explicitly defined)",
      "parentUuid": "685689ca_7bbb1b35",
      "revId": "bd33bc8564a04c5b43040ec156d5c72802eb2428",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6768ba41_469c5ec8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-07-19T09:29:55Z",
      "side": 1,
      "message": "IMO the concept of devstack is to explicitly enable/disable services by configuration, not have some custom logic that automates this, and I would like to keep things that way. Will defer for other reviewer\u0027s opinion though",
      "parentUuid": "29f3d3cd_076a1942",
      "revId": "bd33bc8564a04c5b43040ec156d5c72802eb2428",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c1d8d3e_39c30dee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 16688
      },
      "writtenOn": "2024-07-19T09:56:04Z",
      "side": 1,
      "message": "If that is the case, I\u0027ll propose this change. But this service should also depend on the configuration value. If rpc_workers\u003d0, the service cannot be executed or it will fail.",
      "parentUuid": "6768ba41_469c5ec8",
      "revId": "bd33bc8564a04c5b43040ec156d5c72802eb2428",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d2f646_33eac2a6",
        "filename": "lib/neutron",
        "patchSetId": 1
      },
      "lineNbr": 668,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-07-19T09:31:17Z",
      "side": 1,
      "message": "the syntax error below is actually caused by this",
      "range": {
        "startLine": 668,
        "startChar": 98,
        "endLine": 668,
        "endChar": 99
      },
      "revId": "bd33bc8564a04c5b43040ec156d5c72802eb2428",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4af8505f_bba21d5d",
        "filename": "lib/neutron",
        "patchSetId": 1
      },
      "lineNbr": 668,
      "author": {
        "id": 16688
      },
      "writtenOn": "2024-07-19T11:04:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7d2f646_33eac2a6",
      "range": {
        "startLine": 668,
        "startChar": 98,
        "endLine": 668,
        "endChar": 99
      },
      "revId": "bd33bc8564a04c5b43040ec156d5c72802eb2428",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "AAAAVn//f+Y\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 42,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "This should not be in $DEST directly, but in $DATA_DIR/ironic or just $DATA_DIR if it is shared with other services.",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f9Q\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 45,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "If you can use $SERVICE_HOSt or $HOST_IP here that would be better.  In multi-host setups, SERVICE_HOST points to the controller while HOST_IP is always the current host.",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f88\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 53,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "This should not be in $DEST directly, but in $DATA_DIR/ironic or just $DATA_DIR if it is shared with other services.",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//VGE\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 262,
      "author": {
        "id": 3099
      },
      "writtenOn": "2014-03-06T19:42:15Z",
      "side": 1,
      "message": "This TODO needs to be implemented. Otherwise the deploy fails with:\n\nFailed to deploy. Error: [Errno 13] Permission denied: \u0027/var/lib/ironic/images\u0027",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f/o\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 286,
      "author": {
        "id": 10656
      },
      "writtenOn": "2014-03-05T19:24:23Z",
      "side": 1,
      "message": "For some reason this ended up producing an empty macs file, causing enroll_vm\u0027s to not create the ironic nodes.  I noticed I had no libvirt domains defined.  Perhaps there should be some validation here or modification to create-nodes to fail fatally if it does not produce any nodes?",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//e4M\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 286,
      "author": {
        "id": 2889
      },
      "writtenOn": "2014-03-05T20:30:32Z",
      "side": 1,
      "message": "if $DEST is not set, then $IRONIC_VM_MACS_CSV_FILE will be \"/ironic-macs.csv\" which will not be writable. This is due to the problem on line 53.\n\nAlso, there needs to be error handling here. this script should abort rather than fail silently",
      "parentUuid": "AAAAVn//f/o\u003d",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//WAo\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 302,
      "author": {
        "id": 5805
      },
      "writtenOn": "2014-03-06T18:12:19Z",
      "side": 1,
      "message": "Virt_type should configurable for those running vmware.",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//jAk\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 357,
      "author": {
        "id": 8106
      },
      "writtenOn": "2014-03-05T13:49:17Z",
      "side": 1,
      "message": "It is better we remove the existing /opt/stack/ssh_keys/ironic_key file to avoid breaking here.",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//h2Y\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 357,
      "author": {
        "id": 8003
      },
      "writtenOn": "2014-03-05T15:46:00Z",
      "side": 1,
      "message": "Sorry, I couldnâ€™t agree with you, I don\u0027t think so.\n\nRight after creating new keypair it populates file with authorized_keys, but old keypair won\u0027t be deleted from authorized_keys. \nSimply, there is no need of keypair re-creating on every ./stack.sh run. Does that make sense?",
      "parentUuid": "AAAAVn//jAk\u003d",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f5U\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 357,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "FWIW, Devstack does make the assumption that each run of stack.sh re-creates all data; all databases are re-initialized for example.  You will want to be consistent with that and not expect things to persist between runs.",
      "parentUuid": "AAAAVn//h2Y\u003d",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f5A\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 370,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "since the function namespace is global, this name should be more unique, add \u0027ironic\u0027 to it maybe?",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f4I\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 390,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "IIRC this service name differs between Fedora and Ubuntu",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//a7o\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 392,
      "author": {
        "id": 8106
      },
      "writtenOn": "2014-03-06T06:51:07Z",
      "side": 1,
      "message": "It is better we sleep 1-2 seconds to wait sshd service started beforeing checking the ssh connection, else we check ssh connection immediately, will get a break with error message \"server didn\u0027t become ssh-able\" .",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//f3g\u003d",
        "filename": "lib/ironic",
        "patchSetId": 17
      },
      "lineNbr": 417,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "Please use the existing stop_nova() functions",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//fzU\u003d",
        "filename": "lib/nova_plugins/hypervisor-ironic",
        "patchSetId": 17
      },
      "lineNbr": 47,
      "author": {
        "id": 970
      },
      "writtenOn": "2014-03-05T19:15:24Z",
      "side": 1,
      "message": "This URL needs to be built from $KEYSTONE_AUTH_PROTOCOL://$KEYSTONE_AUTH_HOST:$KEYSTONE_AUTH_PORT",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn//fps\u003d",
        "filename": "tools/ironic/scripts/create-nodes",
        "patchSetId": 17
      },
      "lineNbr": 32,
      "author": {
        "id": 10656
      },
      "writtenOn": "2014-03-05T19:24:23Z",
      "side": 1,
      "message": "This only starts the pool if its being defined for the first time and does not activate a pool that may be present but not active.",
      "revId": "8f77879a1e9cb496fb0c3951c92d1b5d6a87ebe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}
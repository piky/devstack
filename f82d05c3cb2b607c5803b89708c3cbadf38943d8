{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4bb4bb89_739a22f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T20:32:34Z",
      "side": 1,
      "message": "We need more results to say anything definitive but this does appear to save noticeable seconds of runtime.\n\nHere is a tempest-full-py3 run on the inmotion cloud that ran osc for 424 seconds: https://zuul.opendev.org/t/openstack/build/d2561b2704c745f3b4b7bf1a763b2bca/log/job-output.txt#23182\n\nHere is the tempest-full-py3 run from this change which ran osc for 298 seconds: https://zuul.opendev.org/t/openstack/build/2212578f571b4b039e3c63592a7011a7/log/job-output.txt#23040\n\nConsidering that caching tokens should be safe for a dev tool like this, and it is very unlikely to make things slower I think we should proceed with this change. I\u0027m holding off on a +2 because I think it is worth checking my inline comment first but otherwise I\u0027m ++ on this change.",
      "revId": "f82d05c3cb2b607c5803b89708c3cbadf38943d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "278d3202_f6852d51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T20:47:06Z",
      "side": 1,
      "message": "One additional note: It would be good to add documentation on how to enable caching of tokens to both the openstacksdk and openstackclient documentation. Currently there are caching docs in openstacksdk but they don\u0027t really cover that if you install this library and add a config file it just magically works. They do say auth details can be cached to the keyring and that is about it.\n\nBut also having the docs in the client documentation is important for user discoverability. The only caching documentation I can find in the client is related to using the interactive session which works because the process is persisted.",
      "revId": "f82d05c3cb2b607c5803b89708c3cbadf38943d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a11cd3dd_4cb6e01d",
        "filename": "tools/update_clouds_yaml.py",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T18:26:37Z",
      "side": 1,
      "message": "Should we move this outside of the exception handler so that if there is a clouds.yaml already present but there is no caching set we\u0027ll add it? Something like:\n\n```\nexcept IOError:\n    # The user doesn\u0027t have a clouds.yaml file.\n    print(\"The user clouds.yaml file didn\u0027t exist.\")\nif cache not in self._config:\n    self._config[\"cache\"] \u003d {\"auth\": True}\n```\n\nThis is probably less important for CI testing but may be helpful for people that keep a devstack install around for a while and restack occasionaly.",
      "revId": "f82d05c3cb2b607c5803b89708c3cbadf38943d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98018e4f_aa859b1c",
        "filename": "tools/update_clouds_yaml.py",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T18:28:14Z",
      "side": 1,
      "message": "It should be:\n\n```\nif \"cache\" not in self._config:\n```",
      "parentUuid": "a11cd3dd_4cb6e01d",
      "revId": "f82d05c3cb2b607c5803b89708c3cbadf38943d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "473b5aa1_582fcfab",
        "filename": "tools/update_clouds_yaml.py",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-10-25T20:47:06Z",
      "side": 1,
      "message": "Reading the openstacksdk documentation this should we also set expiration_time? Maybe to an 15 minutes? That should be plenty long for devstack jobs but short enough that users will refresh data often enough. Or is this unnecessary because the keyring expiry is different than the dogpile caching?\n\nAlso we aren\u0027t setting the cache class. The documentation says this defaults to `dogpile.cache.memory`. It appears that auth token caching is special and always uses the keyring. Should we separately enable on disk caching for other resources? I guess the risk there is we are creating all the flavors and images and networks and so on and we don\u0027t want to be caching stale data between osc runs. That might be worth a comment here to clarify why we only bother with on disk caching for auth tokens.",
      "parentUuid": "98018e4f_aa859b1c",
      "revId": "f82d05c3cb2b607c5803b89708c3cbadf38943d8",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_151fde71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 7118
      },
      "writtenOn": "2020-01-16T04:07:08Z",
      "side": 1,
      "message": "perhaps this is a bug?\n\nI thought that unstack.sh was to more or less shutdown but leave state, and that cleanup.sh actually purges it all ...\n\nBut I never do anything that isn\u0027t in a VM i just remove when I\u0027m done with it anyway, so I\u0027m not a good guide on these because I never use them.",
      "range": {
        "startLine": 17,
        "startChar": 53,
        "endLine": 19,
        "endChar": 60
      },
      "revId": "85c5ec11c9526e0429163db5701d3ea8c096a324",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_60e1b2cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 13252
      },
      "writtenOn": "2020-01-16T05:47:00Z",
      "side": 1,
      "message": "clean.sh claims to be for cleaning up after grenade runs, so having unstack.sh clean up everything that devstack does seems the right thing to do. one might argue that stack.sh in itself doesn\u0027t create any instances, though.\n\non a more general note, I think we should deprecate unstack.sh completely. we don\u0027t properly test it and if we could agree that ppl should just use throwaway instances for running devstack like we do in gate, things would get much simpler.",
      "parentUuid": "3fa7e38b_151fde71",
      "range": {
        "startLine": 17,
        "startChar": 53,
        "endLine": 19,
        "endChar": 60
      },
      "revId": "85c5ec11c9526e0429163db5701d3ea8c096a324",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_07c00d2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 8556
      },
      "writtenOn": "2020-01-16T15:31:05Z",
      "side": 1,
      "message": "I agree. what exactly unstack.sh supposed to do is not very clear. It cleanup few resources and leave few.\n\nAs long term benefits, I agree with Jens to deprecate it and keep the single cleanup script clean.sh only.",
      "parentUuid": "3fa7e38b_60e1b2cf",
      "range": {
        "startLine": 17,
        "startChar": 53,
        "endLine": 19,
        "endChar": 60
      },
      "revId": "85c5ec11c9526e0429163db5701d3ea8c096a324",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_050d5b35",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 841
      },
      "writtenOn": "2020-01-17T07:59:59Z",
      "side": 1,
      "message": "Totally agree that the role of unstack.sh is unclear.\n\nI have no strong reason to use unstack.sh but I use it from the following two reasons:\n- clean.sh deletes devstack log (/opt/stack/logs). I would like to keep recent devstack logs so I use unstack.sh.\n- Another reason is to skip several package installation like rabbitmq, mysql and so on, However it is not a major factor on how long stack.sh takes now, so it is a matter of taste.\n\nIn a short term, what I expect in unstack.sh is that all services works properly without digging into detail like the issue here when we do stack.sh -\u003e unstack.sh -\u003e stack.sh.\n\nIn a long term, it sounds reasonable to drop the current unstack.sh and use clean.sh for all cases.",
      "parentUuid": "3fa7e38b_07c00d2b",
      "range": {
        "startLine": 17,
        "startChar": 53,
        "endLine": 19,
        "endChar": 60
      },
      "revId": "85c5ec11c9526e0429163db5701d3ea8c096a324",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}